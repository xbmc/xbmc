name: SonarQube

# Only run after push to master - PR analysis is very unhelpful since we cannot tune the
# ruleset, quality gate etc.
on:
  push:
    branches:
      - master
jobs:
  sonarqube:
    if: github.repository == 'xbmc/xbmc'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5
      - name: Install dependencies
        # See docs/README.Ubuntu.md
        run: |
          sudo apt update
          sudo apt install -y debhelper autoconf automake autopoint gettext autotools-dev cmake curl default-jre doxygen gawk gcc gdc gperf libasound2-dev libass-dev libavahi-client-dev libavahi-common-dev libbluetooth-dev libbluray-dev libbz2-dev libcdio-dev libp8-platform-dev libcrossguid-dev libcurl4-openssl-dev libcwiid-dev libdbus-1-dev libdrm-dev libegl1-mesa-dev libenca-dev libexiv2-dev libflac-dev libfmt-dev libfontconfig-dev libfreetype6-dev libfribidi-dev libfstrcmp-dev libgcrypt-dev libgif-dev libgles2-mesa-dev libgl1-mesa-dev libglu1-mesa-dev libgnutls28-dev libgpg-error-dev libgtest-dev libiso9660-dev libjpeg-dev liblcms2-dev libltdl-dev liblzo2-dev libmicrohttpd-dev libmysqlclient-dev libnfs-dev libogg-dev libpcre2-dev libplist-dev libpng-dev libpulse-dev libshairplay-dev libsmbclient-dev libspdlog-dev libsqlite3-dev libssl-dev libtag1-dev libtiff5-dev libtinyxml-dev libtinyxml2-dev libtool libudev-dev libunistring-dev libva-dev libvdpau-dev libvorbis-dev libxmu-dev libxrandr-dev libxslt1-dev libxt-dev lsb-release meson nasm ninja-build nlohmann-json3-dev python3-dev python3-pil python3-pip swig unzip uuid-dev zip zlib1g-dev
          sudo apt install -y libcec-dev libfmt-dev liblirc-dev
          sudo apt install -y libflatbuffers-dev
          sudo apt install -y libglew-dev libwayland-dev libxkbcommon-dev waylandpp-dev wayland-protocols
          sudo apt install -y libgbm-dev libinput-dev libxkbcommon-dev
          sudo apt install -y doxygen libcap-dev libsndio-dev libmariadbd-dev
          sudo apt install -y libdisplay-info-dev
      - name: Run Build Wrapper
        run: |
          mkdir build
          cmake -S . -B build -D APP_RENDER_SYSTEM=gl -D ENABLE_INTERNAL_FFMPEG=ON -D CMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.cfamily.compile-commands=build/compile_commands.json
